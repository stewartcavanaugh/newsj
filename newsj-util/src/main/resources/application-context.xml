<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2016. Sten Martinez
  ~ This program is free software; you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation; either version 2 of the License, or
  ~ (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License along
  ~ with this program; if not, write to the Free Software Foundation, Inc.,
  ~ 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd">

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="true" />
        <property name="locations" value="classpath:db.properties"/>
    </bean>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${newsj.db.driverClass}"/>
        <property name="jdbcUrl" value="${newsj.db.jdbcUrl}"/>
        <property name="user" value="${newsj.db.user}"/>
        <property name="password" value="${newsj.db.password}"/>
        <property name="initialPoolSize" value="2"/>
        <property name="maxPoolSize" value="10"/>
        <property name="minPoolSize" value="1"/>
        <property name="acquireIncrement" value="1"/>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mappingLocations" value="classpath:hibernate-mapping.xml"/>
        <property name="hibernateProperties">
            <props>
                <!--<prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>-->
                <prop key="hibernate.jdbc.batch_size">5</prop>
                <!--<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>-->
            </props>
        </property>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <property name="messageConverters">
            <util:list>
                <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <bean class="org.springframework.http.MediaType">
                                <constructor-arg name="type" value="application"/>
                                <constructor-arg name="subtype" value="json"/>
                            </bean>
                            <bean class="org.springframework.http.MediaType">
                                <constructor-arg name="type" value="application"/>
                                <constructor-arg name="subtype" value="*+json"/>
                            </bean>
                            <bean class="org.springframework.http.MediaType">
                                <constructor-arg name="type" value="text"/>
                                <constructor-arg name="subtype" value="javascript"/>
                            </bean>
                        </list>
                    </property>
                </bean>
            </util:list>
        </property>
    </bean>

    <!-- DAOs -->
    <bean id="groupDAO" class="net.longfalcon.newsj.persistence.hibernate.GroupDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="siteDAO" class="net.longfalcon.newsj.persistence.hibernate.SiteDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="binaryDAO" class="net.longfalcon.newsj.persistence.hibernate.BinaryDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="partDAO" class="net.longfalcon.newsj.persistence.hibernate.PartDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="partRepairDAO" class="net.longfalcon.newsj.persistence.hibernate.PartRepairDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="releaseCommentDAO" class="net.longfalcon.newsj.persistence.hibernate.ReleaseCommentDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="releaseRegexDAO" class="net.longfalcon.newsj.persistence.hibernate.ReleaseRegexDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="releaseDAO" class="net.longfalcon.newsj.persistence.hibernate.ReleaseDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="binaryBlacklistDAO" class="net.longfalcon.newsj.persistence.hibernate.BinaryBlacklistDAOImpl" >
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="releaseNfoDAO" class="net.longfalcon.newsj.persistence.hibernate.ReleaseNfoDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="categoryDAO" class="net.longfalcon.newsj.persistence.hibernate.CategoryDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="tvRageDAO" class="net.longfalcon.newsj.persistence.hibernate.TvRageDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="userDAO" class="net.longfalcon.newsj.persistence.hibernate.UserDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="userExCatDAO" class="net.longfalcon.newsj.persistence.hibernate.UserExCatDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="menuItemDAO" class="net.longfalcon.newsj.persistence.hibernate.MenuItemDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="contentDAO" class="net.longfalcon.newsj.persistence.hibernate.ContentDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="userInviteDAO" class="net.longfalcon.newsj.persistence.hibernate.UserInviteDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="consoleInfoDAO" class="net.longfalcon.newsj.persistence.hibernate.ConsoleInfoDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="genreDAO" class="net.longfalcon.newsj.persistence.hibernate.GenreDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="movieInfoDAO" class="net.longfalcon.newsj.persistence.hibernate.MovieInfoDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="musicInfoDAO" class="net.longfalcon.newsj.persistence.hibernate.MusicInfoDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="userCartDAO" class="net.longfalcon.newsj.persistence.hibernate.UserCartDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="forumPostDAO" class="net.longfalcon.newsj.persistence.hibernate.ForumPostDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="jobConfigDAO" class="net.longfalcon.newsj.persistence.hibernate.JobConfigDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="jobLogDAO" class="net.longfalcon.newsj.persistence.hibernate.JobLogDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- Services -->
    <bean id="backfill" class="net.longfalcon.newsj.Backfill">
        <property name="fetchBinaries" ref="fetchBinaries"/>
        <property name="groupDAO" ref="groupDAO"/>
        <property name="nntpConnectionFactory" ref="nntpConnectionFactory"/>
        <property name="transactionManager" ref="transactionManager"/>
    </bean>
    <bean id="binaries" class="net.longfalcon.newsj.Binaries">
        <property name="groupDAO" ref="groupDAO"/>
        <property name="siteDAO" ref="siteDAO"/>
        <property name="binaryDAO" ref="binaryDAO"/>
        <property name="partDAO" ref="partDAO"/>
        <property name="partRepairDAO" ref="partRepairDAO"/>
        <property name="nntpConnectionFactory" ref="nntpConnectionFactory"/>
        <property name="backfill" ref="backfill"/>
        <property name="blacklist" ref="blacklist"/>
        <property name="transactionManager" ref="transactionManager"/>
        <property name="fetchBinaries" ref="fetchBinaries"/>
    </bean>
    <bean id="blacklist" class="net.longfalcon.newsj.Blacklist">
        <property name="binaryBlacklistDAO" ref="binaryBlacklistDAO"/>
    </bean>
    <bean id="cartService" class="net.longfalcon.newsj.service.CartService">
        <property name="userCartDAO" ref="userCartDAO"/>
    </bean>
    <bean id="categoryService" class="net.longfalcon.newsj.CategoryService">
        <property name="groupDAO" ref="groupDAO"/>
        <property name="userExCatDAO" ref="userExCatDAO"/>
        <property name="categoryDAO" ref="categoryDAO"/>
    </bean>
    <bean id="config" class="net.longfalcon.newsj.Config" init-method="init">
        <property name="propertyLocations">
            <list>
                <value>classpath:config.api.properties</value>
                <value>classpath:config.properties</value>
            </list>
        </property>
        <property name="siteDAO" ref="siteDAO"/>
    </bean>
    <bean id="contentService" class="net.longfalcon.newsj.service.ContentService">
        <property name="contentDAO" ref="contentDAO"/>
    </bean>
    <bean id="fetchBinaries" class="net.longfalcon.newsj.FetchBinaries">
        <property name="partDAO" ref="partDAO"/>
        <property name="binaryDAO" ref="binaryDAO"/>
        <property name="blacklist" ref="blacklist"/>
        <property name="nntpConnectionFactory" ref="nntpConnectionFactory"/>
        <property name="partRepairDAO" ref="partRepairDAO"/>
        <property name="transactionManager" ref="transactionManager"/>
    </bean>
    <bean id="fileSystemService" class="net.longfalcon.newsj.fs.DefaultFileSystemServiceImpl" init-method="init">
        <property name="config" ref="config"/>
    </bean>
    <bean id="games" class="net.longfalcon.newsj.service.GameService">
        <property name="genreDAO" ref="genreDAO"/>
        <property name="consoleInfoDAO" ref="consoleInfoDAO"/>
        <property name="fileSystemService" ref="fileSystemService"/>
    </bean>
    <bean id="googleSearchService" class="net.longfalcon.newsj.service.GoogleSearchService">
        <property name="restTemplate" ref="restTemplate"/>
    </bean>
    <bean id="groupService" class="net.longfalcon.newsj.service.GroupService">
        <property name="groupDAO" ref="groupDAO"/>
        <property name="releaseDAO" ref="releaseDAO"/>
        <property name="binaryDAO" ref="binaryDAO"/>
        <property name="schedulerService" ref="schedulerService"/>
    </bean>
    <bean id="installerService" class="net.longfalcon.newsj.service.InstallerService">
        <property name="fileSystemService" ref="fileSystemService"/>
        <property name="siteDAO" ref="siteDAO"/>
        <property name="config" ref="config"/>
    </bean>
    <bean id="jobLogService" class="net.longfalcon.newsj.service.JobLogService">
        <property name="jobLogDAO" ref="jobLogDAO"/>
    </bean>
    <bean id="menuService" class="net.longfalcon.newsj.service.MenuService">
        <property name="menuItemDAO" ref="menuItemDAO"/>
    </bean>
    <bean id="movie" class="net.longfalcon.newsj.service.MovieService">
        <property name="googleSearchService" ref="googleSearchService"/>
        <property name="categoryDAO" ref="categoryDAO"/>
        <property name="releaseDAO" ref="releaseDAO"/>
        <property name="movieInfoDAO" ref="movieInfoDAO"/>
        <property name="fileSystemService" ref="fileSystemService"/>
        <property name="tmdbService" ref="tmdbService"/>
    </bean>
    <bean id="music" class="net.longfalcon.newsj.service.MusicService">
        <property name="musicInfoDAO" ref="musicInfoDAO"/>
        <property name="fileSystemService" ref="fileSystemService"/>
    </bean>
    <bean id="nfo" class="net.longfalcon.newsj.Nfo">
        <property name="groupDAO" ref="groupDAO"/>
        <property name="binaryDAO" ref="binaryDAO"/>
        <property name="partDAO" ref="partDAO"/>
        <property name="releaseNfoDAO" ref="releaseNfoDAO"/>
        <property name="movieService" ref="movie"/>
        <property name="fileSystemService" ref="fileSystemService"/>
        <property name="nntpConnectionFactory" ref="nntpConnectionFactory"/>
    </bean>
    <bean id="nntpConnectionFactory" class="net.longfalcon.newsj.nntp.NntpConnectionFactory">
        <property name="config" ref="config"/>
    </bean>
    <bean id="nzb" class="net.longfalcon.newsj.Nzb">
        <property name="config" ref="config"/>
        <property name="binaryDAO" ref="binaryDAO"/>
        <property name="categoryDAO" ref="categoryDAO"/>
        <property name="groupDAO" ref="groupDAO"/>
        <property name="partDAO" ref="partDAO"/>
    </bean>
    <bean id="regexService" class="net.longfalcon.newsj.service.RegexService"/>
    <bean id="releaseCommentService" class="net.longfalcon.newsj.service.ReleaseCommentService">
        <property name="releaseDAO" ref="releaseDAO"/>
        <property name="releaseCommentDAO" ref="releaseCommentDAO"/>
    </bean>
    <bean id="releases" class="net.longfalcon.newsj.Releases">
        <property name="fileSystemService" ref="fileSystemService"/>
        <property name="binaries" ref="binaries"/>
        <property name="categoryService" ref="categoryService"/>
        <property name="nfo" ref="nfo"/>
        <property name="nzb" ref="nzb"/>
        <property name="tvRageService" ref="tvRage"/>
        <property name="musicService" ref="music"/>
        <property name="gameService" ref="games"/>
        <property name="movieService" ref="movie"/>
        <property name="groupDAO" ref="groupDAO"/>
        <property name="siteDAO" ref="siteDAO"/>
        <property name="binaryDAO" ref="binaryDAO"/>
        <property name="partDAO" ref="partDAO"/>
        <property name="releaseDAO" ref="releaseDAO"/>
        <property name="releaseRegexDAO" ref="releaseRegexDAO"/>
        <property name="transactionManager" ref="transactionManager"/>
    </bean>
    <bean id="rssService" class="net.longfalcon.newsj.service.RssService">
        <property name="config" ref="config"/>
    </bean>
    <bean id="searchService" class="net.longfalcon.newsj.service.SearchService">
        <property name="consoleInfoDAO" ref="consoleInfoDAO"/>
        <property name="genreDAO" ref="genreDAO"/>
        <property name="movieInfoDAO" ref="movieInfoDAO"/>
        <property name="musicInfoDAO" ref="musicInfoDAO"/>
        <property name="tvRageDAO" ref="tvRageDAO"/>
        <property name="releases" ref="releases"/>
        <property name="binaryDAO" ref="binaryDAO"/>
        <property name="siteDAO" ref="siteDAO"/>
    </bean>
    <bean id="siteService" class="net.longfalcon.newsj.service.SiteService">
        <property name="siteDAO" ref="siteDAO"/>
    </bean>
    <bean id="tmdbService" class="net.longfalcon.newsj.service.TmdbService">
        <property name="config" ref="config"/>
        <property name="restTemplate" ref="restTemplate"/>
    </bean>
    <bean id="traktService" class="net.longfalcon.newsj.service.TraktService">
        <property name="config" ref="config"/>
        <property name="restTemplate" ref="restTemplate"/>
    </bean>
    <bean id="tvRage" class="net.longfalcon.newsj.TVRageService">
        <property name="categoryDAO" ref="categoryDAO"/>
        <property name="releaseDAO" ref="releaseDAO"/>
        <property name="tvRageDAO" ref="tvRageDAO"/>
        <property name="traktService" ref="traktService"/>
        <property name="fileSystemService" ref="fileSystemService"/>
    </bean>
    <bean id="userInviteService" class="net.longfalcon.newsj.service.UserInviteService">
        <property name="userInviteDAO" ref="userInviteDAO"/>
    </bean>
    <bean id="userService" class="net.longfalcon.newsj.service.UserService">
        <property name="userDAO" ref="userDAO"/>
        <property name="userInviteDAO" ref="userInviteDAO"/>
    </bean>

    <!-- SCHEDULER -->
    <bean id="schedulerService" class="net.longfalcon.newsj.service.SchedulerService" init-method="init" destroy-method="destroy">
        <property name="scheduler" ref="scheduler"/>
        <property name="updateJobDetail" ref="updateJobDetail"/>
        <property name="jobConfigDAO" ref="jobConfigDAO"/>
        <property name="backfill" ref="backfill"/>
        <property name="jobLogService" ref="jobLogService"/>
    </bean>
    <bean id="updateJobDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="net.longfalcon.newsj.job.NewsUpdateJob"/>
        <property name="jobDataAsMap">
            <map>
                <entry key="binaries" value-ref="binaries"/>
                <entry key="releases" value-ref="releases"/>
                <entry key="jobLogService" value-ref="jobLogService"/>
            </map>
        </property>
    </bean>
    <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="quartzProperties">
                <value>
                    org.quartz.scheduler.instanceName = NewsJScheduler
                    org.quartz.threadPool.threadCount = 2
                    org.quartz.jobStore.class = org.quartz.simpl.RAMJobStore
                    org.quartz.plugin.shutdownhook.class = org.quartz.plugins.management.ShutdownHookPlugin
                    org.quartz.plugin.shutdownhook.cleanShutdown = true
                </value>
        </property>
    </bean>

</beans>